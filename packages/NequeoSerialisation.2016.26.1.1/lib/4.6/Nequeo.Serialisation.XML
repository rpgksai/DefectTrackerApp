<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nequeo.Serialisation</name>
    </assembly>
    <members>
        <member name="T:Nequeo.Serialisation.DataSetSerialisationErrorArgs">
            <summary>
            Serialisation argument class containing event handler
            information for the Serialisation process delegate.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisationErrorArgs.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor for the Serialisation process event argument.
            </summary>
            <param name="exceptionMessage">The error message within the Serialisation class.</param>
            <param name="serialisationProcess">The original command that was to be processed.</param>
            <param name="xmlFile">The file that contains serialised data or where serialised data
            is to be placed.</param>
        </member>
        <member name="P:Nequeo.Serialisation.DataSetSerialisationErrorArgs.ExceptionMessage">
            <summary>
            Contains the error message within the Serialisation class.
            </summary>
        </member>
        <member name="P:Nequeo.Serialisation.DataSetSerialisationErrorArgs.SerialisationProcess">
            <summary>
            Contains the original command that was to be processed.
            </summary>
        </member>
        <member name="P:Nequeo.Serialisation.DataSetSerialisationErrorArgs.XmlFile">
            <summary>
            Contains the original file that contains serialised data or 
            where serialised data is to be placed.
            </summary>
        </member>
        <member name="T:Nequeo.Serialisation.DataSetSerialisationArgs">
            <summary>
            Serialisation argument class containing event handler
            information for the Serialisation process delegate.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisationArgs.#ctor(System.Data.DataSet,System.String,System.String)">
            <summary>
            Constructor for the Serialisation process event argument.
            </summary>
            <param name="dataSet">The dataset that was Serialised or deSerialised.</param>
            <param name="serialisationProcess">The original command that was to be processed.</param>
            <param name="xmlFile">The file that contains serialised data or where serialised data
            is to be placed.</param>
        </member>
        <member name="P:Nequeo.Serialisation.DataSetSerialisationArgs.DataSet">
            <summary>
            Contains the dataset that was Serialised or deserialised.
            </summary>
        </member>
        <member name="P:Nequeo.Serialisation.DataSetSerialisationArgs.SerialisationProcess">
            <summary>
            Contains the original command that was to be processed.
            </summary>
        </member>
        <member name="P:Nequeo.Serialisation.DataSetSerialisationArgs.XmlFile">
            <summary>
            Contains the original file that contains serialised data or 
            where serialised data is to be placed.
            </summary>
        </member>
        <member name="T:Nequeo.Serialisation.DataTableSerialisationErrorArgs">
            <summary>
            Serialisation argument class containing event handler
            information for the Serialisation process delegate.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisationErrorArgs.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor for the Serialisation process event argument.
            </summary>
            <param name="exceptionMessage">The error message within the Serialisation class.</param>
            <param name="serialisationProcess">The original command that was to be processed.</param>
            <param name="xmlFile">The file that contains serialised data or where serialised data
            is to be placed.</param>
        </member>
        <member name="P:Nequeo.Serialisation.DataTableSerialisationErrorArgs.ExceptionMessage">
            <summary>
            Contains the error message within the Serialisation class.
            </summary>
        </member>
        <member name="P:Nequeo.Serialisation.DataTableSerialisationErrorArgs.SerialisationProcess">
            <summary>
            Contains the original command that was to be processed.
            </summary>
        </member>
        <member name="P:Nequeo.Serialisation.DataTableSerialisationErrorArgs.XmlFile">
            <summary>
            Contains the original file that contains serialised data or 
            where serialised data is to be placed.
            </summary>
        </member>
        <member name="T:Nequeo.Serialisation.DataTableSerialisationArgs">
            <summary>
            Serialisation argument class containing event handler
            information for the Serialisation process delegate.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisationArgs.#ctor(System.Data.DataTable,System.String,System.String)">
            <summary>
            Constructor for the Serialisation process event argument.
            </summary>
            <param name="dataTable">The datatable that was Serialised or deSerialised.</param>
            <param name="serialisationProcess">The original command that was to be processed.</param>
            <param name="xmlFile">The file that contains serialised data or where serialised data
            is to be placed.</param>
        </member>
        <member name="P:Nequeo.Serialisation.DataTableSerialisationArgs.DataTable">
            <summary>
            Contains the datatable that was Serialised or deSerialised.
            </summary>
        </member>
        <member name="P:Nequeo.Serialisation.DataTableSerialisationArgs.SerialisationProcess">
            <summary>
            Contains the original command that was to be processed.
            </summary>
        </member>
        <member name="P:Nequeo.Serialisation.DataTableSerialisationArgs.XmlFile">
            <summary>
            Contains the original file that contains serialised data or 
            where serialised data is to be placed.
            </summary>
        </member>
        <member name="T:Nequeo.Serialisation.SerialisationErrorArgs">
            <summary>
            Serialisation argument class containing event handler
            information for the Serialisation process delegate.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.SerialisationErrorArgs.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor for the Serialisation process event argument.
            </summary>
            <param name="exceptionMessage">The error message within the Serialisation class.</param>
            <param name="serialisationProcess">The original command that was to be processed.</param>
            <param name="xmlFile">The file that contains serialised data or where serialised data
            is to be placed.</param>
        </member>
        <member name="P:Nequeo.Serialisation.SerialisationErrorArgs.ExceptionMessage">
            <summary>
            Contains the error message within the Serialisation class.
            </summary>
        </member>
        <member name="P:Nequeo.Serialisation.SerialisationErrorArgs.SerialisationProcess">
            <summary>
            Contains the original command that was to be processed.
            </summary>
        </member>
        <member name="P:Nequeo.Serialisation.SerialisationErrorArgs.XmlFile">
            <summary>
            Contains the original file that contains serialised data or 
            where serialised data is to be placed.
            </summary>
        </member>
        <member name="T:Nequeo.Serialisation.SerialisationArgs">
            <summary>
            Serialisation argument class containing event handler
            information for the Serialisation process delegate.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.SerialisationArgs.#ctor(System.Object,System.String,System.String)">
            <summary>
            Constructor for the Serialisation process event argument.
            </summary>
            <param name="data">The data that was Serialised or deserialised.</param>
            <param name="serialisationProcess">The original command that was to be processed.</param>
            <param name="xmlFile">The file that contains serialised data or where serialised data
            is to be placed.</param>
        </member>
        <member name="P:Nequeo.Serialisation.SerialisationArgs.Data">
            <summary>
            Contains the datatable that was Serialised or deserialised.
            </summary>
        </member>
        <member name="P:Nequeo.Serialisation.SerialisationArgs.SerialisationProcess">
            <summary>
            Contains the original command that was to be processed.
            </summary>
        </member>
        <member name="P:Nequeo.Serialisation.SerialisationArgs.XmlFile">
            <summary>
            Contains the original file that contains serialised data or 
            where serialised data is to be placed.
            </summary>
        </member>
        <member name="T:Nequeo.Serialisation.GenericSerialisationErrorArgs">
            <summary>
            Serialisation argument class containing event handler
            information for the Serialisation process delegate.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisationErrorArgs.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor for the Serialisation process event argument.
            </summary>
            <param name="exceptionMessage">The error message within the Serialisation class.</param>
            <param name="serialisationProcess">The original command that was to be processed.</param>
            <param name="xmlFile">The file that contains serialised data or where serialised data
            is to be placed.</param>
        </member>
        <member name="P:Nequeo.Serialisation.GenericSerialisationErrorArgs.ExceptionMessage">
            <summary>
            Contains the error message within the Serialisation class.
            </summary>
        </member>
        <member name="P:Nequeo.Serialisation.GenericSerialisationErrorArgs.SerialisationProcess">
            <summary>
            Contains the original command that was to be processed.
            </summary>
        </member>
        <member name="P:Nequeo.Serialisation.GenericSerialisationErrorArgs.XmlFile">
            <summary>
            Contains the original file that contains serialised data or 
            where serialised data is to be placed.
            </summary>
        </member>
        <member name="T:Nequeo.Serialisation.GenericSerialisationArgs">
            <summary>
            Serialisation argument class containing event handler
            information for the Serialisation process delegate.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisationArgs.#ctor(System.String,System.String)">
            <summary>
            Constructor for the Serialisation process event argument.
            </summary>
            <param name="serialisationProcess">The original command that was to be processed.</param>
            <param name="xmlFile">The file that contains serialised data or where serialised data
            is to be placed.</param>
        </member>
        <member name="P:Nequeo.Serialisation.GenericSerialisationArgs.SerialisationProcess">
            <summary>
            Contains the original command that was to be processed.
            </summary>
        </member>
        <member name="P:Nequeo.Serialisation.GenericSerialisationArgs.XmlFile">
            <summary>
            Contains the original file that contains serialised data or 
            where serialised data is to be placed.
            </summary>
        </member>
        <member name="T:Nequeo.Serialisation.DataSetSerialisationHandler">
            <summary>
            This delegate handles the transport of data from sender
            to receiver when dataset Serialisation process occurs.
            </summary>
            <param name="sender">The current object sending the message</param>
            <param name="e">The object containing the event information.</param>
        </member>
        <member name="T:Nequeo.Serialisation.DataSetSerialisationErrorHandler">
            <summary>
            This delegate handles the transport of data from sender
            to receiver when dataset Serialisation error occurs.
            </summary>
            <param name="sender">The current object sending the message</param>
            <param name="e">The object containing the event information.</param>
        </member>
        <member name="T:Nequeo.Serialisation.DataSetSerialisation">
            <summary>
            Class that Serialises or deserialises a dataset.
            </summary>
        </member>
        <member name="F:Nequeo.Serialisation.DataSetSerialisation.Instance">
            <summary>
            Create a new static instance
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisation.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisation.#ctor">
            <summary>
            Constructor for the current class.
            </summary>
        </member>
        <member name="E:Nequeo.Serialisation.DataSetSerialisation.OnSerialisationError">
            <summary>
            This event occurs when an error occurs 
            attempting to Serialise a dataset.
            </summary>
        </member>
        <member name="E:Nequeo.Serialisation.DataSetSerialisation.OnSerialisationComplete">
            <summary>
            This event occurs when Serialisation of the dataset
            has completed through Serialisation.
            </summary>
        </member>
        <member name="E:Nequeo.Serialisation.DataSetSerialisation.OnDeserialisationComplete">
            <summary>
            This event occurs when deSerialisation of the dataset
            has completed through Serialisation.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisation.Deserialise(System.Byte[])">
            <summary>
            Deserialises data from the specified byte array.
            </summary>
            <param name="serialData">The serialised data to deserialise.</param>
            <returns>The deserialised dataset.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisation.Deserialise(System.String)">
            <summary>
            Deserialises data from the specified file.
            </summary>
            <param name="xmlFile">The full file and path of the file that contains
            the Serialised data.</param>
            <returns>The deserialised dataset.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisation.Serialise(System.Data.DataSet)">
            <summary>
            Serialises data to the specified byte array.
            </summary>
            <param name="dataSet">The dataset to serilaize.</param>
            <returns>True if the dataset was Serialised else false.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisation.Serialise(System.Data.DataSet,System.String)">
            <summary>
            Serialises data to the specified file.
            </summary>
            <param name="dataSet">The dataset to serilaize.</param>
            <param name="xmlFile">The full file and path where the Serialised data
            dhould be written to.</param>
            <returns>True if the dataset was Serialised else false.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisation.ExceptionHandler(System.Exception,System.String,System.String,System.String)">
            <summary>
            The general exception handler.
            </summary>
            <param name="e">The current eception object.</param>
            <param name="serialMethod">The current Serialisation process.</param>
            <param name="serialCustomError">The current custom exception.</param>
            <param name="xmlFile">The file that contains serialised data 
            or where serialised data is to be placed.</param>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisation.CompletionEventHandler(System.Data.DataSet,System.String,System.String,Nequeo.Serialisation.EventType)">
            <summary>
            The general event completion handler.
            </summary>
            <param name="dataSet">The current dataset containing the data.</param>
            <param name="serialMethod">The current Serialisation process.</param>
            <param name="xmlFile">The file that contains serialised data 
            or where serialised data is to be placed.</param>
            <param name="eventType">The event type to create.</param>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisation.deserialiser_UnknownElement(System.Object,System.Xml.Serialization.XmlElementEventArgs)">
            <summary>
            This event is thrown if the element is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Element event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisation.deserialiser_UnknownAttribute(System.Object,System.Xml.Serialization.XmlAttributeEventArgs)">
            <summary>
            This event is thrown if the attribute is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Attribute event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisation.deserialiser_UnknownNode(System.Object,System.Xml.Serialization.XmlNodeEventArgs)">
            <summary>
            This event is thrown if the node is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Node event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisation.serialiser_UnknownElement(System.Object,System.Xml.Serialization.XmlElementEventArgs)">
            <summary>
            This event is thrown if the element is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Element event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisation.serialiser_UnknownAttribute(System.Object,System.Xml.Serialization.XmlAttributeEventArgs)">
            <summary>
            This event is thrown if the attribute is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Attribute event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.DataSetSerialisation.serialiser_UnknownNode(System.Object,System.Xml.Serialization.XmlNodeEventArgs)">
            <summary>
            This event is thrown if the node is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Node event argument.</param>
        </member>
        <member name="T:Nequeo.Serialisation.IDataSetSerialisation">
            <summary>
            Interface that Serialises or deserialises a dataset.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.IDataSetSerialisation.Deserialise(System.Byte[])">
            <summary>
            Deserialises data from the specified byte array.
            </summary>
            <param name="serialData">The serialised data to deserialise.</param>
            <returns>The deserialised dataset.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IDataSetSerialisation.Deserialise(System.String)">
            <summary>
            Deserialises data from the specified file.
            </summary>
            <param name="xmlFile">The full file and path of the file that contains
            the Serialised data.</param>
            <returns>The deserialised dataset.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IDataSetSerialisation.Serialise(System.Data.DataSet)">
            <summary>
            Serialises data to the specified byte array.
            </summary>
            <param name="dataSet">The dataset to serilaize.</param>
            <returns>True if the dataset was Serialised else false.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IDataSetSerialisation.Serialise(System.Data.DataSet,System.String)">
            <summary>
            Serialises data to the specified file.
            </summary>
            <param name="dataSet">The dataset to serilaize.</param>
            <param name="xmlFile">The full file and path where the Serialised data
            dhould be written to.</param>
            <returns>True if the dataset was Serialised else false.</returns>
        </member>
        <member name="T:Nequeo.Serialisation.DataTableSerialisationHandler">
            <summary>
            This delegate handles the transport of data from sender
            to receiver when datatable Serialisation process occurs.
            </summary>
            <param name="sender">The current object sending the message</param>
            <param name="e">The object containing the event information.</param>
        </member>
        <member name="T:Nequeo.Serialisation.DataTableSerialisationErrorHandler">
            <summary>
            This delegate handles the transport of data from sender
            to receiver when datatable Serialisation error occurs.
            </summary>
            <param name="sender">The current object sending the message</param>
            <param name="e">The object containing the event information.</param>
        </member>
        <member name="T:Nequeo.Serialisation.DataTableSerialisation">
            <summary>
            Class that Serialises or deserialises a datatable.
            </summary>
        </member>
        <member name="F:Nequeo.Serialisation.DataTableSerialisation.Instance">
            <summary>
            Create a new static instance
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisation.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisation.#ctor">
            <summary>
            Constructor for the current class.
            </summary>
        </member>
        <member name="E:Nequeo.Serialisation.DataTableSerialisation.OnSerialisationError">
            <summary>
            This event occurs when an error occurs 
            attempting to Serialise a datatable.
            </summary>
        </member>
        <member name="E:Nequeo.Serialisation.DataTableSerialisation.OnSerialisationComplete">
            <summary>
            This event occurs when Serialisation of the datatable
            has completed through Serialisation.
            </summary>
        </member>
        <member name="E:Nequeo.Serialisation.DataTableSerialisation.OnDeserialisationComplete">
            <summary>
            This event occurs when deSerialisation of the datatable
            has completed through Serialisation.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisation.Deserialise(System.Byte[])">
            <summary>
            Deserialises data from the specified byte array.
            </summary>
            <param name="serialData">The serialised data to deserialise.</param>
            <returns>The deserialised datatable.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisation.Deserialise(System.String)">
            <summary>
            Deserialises data from the specified file.
            </summary>
            <param name="xmlFile">The full file and path of the file that contains
            the Serialised data.</param>
            <returns>The deserialised datatable.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisation.Serialise(System.Data.DataTable)">
            <summary>
            Serialises data to the specified byte array.
            </summary>
            <param name="dataTable">The datatable to serilaize.</param>
            <returns>True if the dataset was Serialised else false.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisation.Serialise(System.Data.DataTable,System.String)">
            <summary>
            Serialises data to the specified file.
            </summary>
            <param name="dataTable">The datatable to serilaize.</param>
            <param name="xmlFile">The full file and path where the Serialised data
            dhould be written to.</param>
            <returns>True if the datatable was Serialised else false.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisation.ExceptionHandler(System.Exception,System.String,System.String,System.String)">
            <summary>
            The general exception handler.
            </summary>
            <param name="e">The current eception object.</param>
            <param name="serialMethod">The current Serialisation process.</param>
            <param name="serialCustomError">The current custom exception.</param>
            <param name="xmlFile">The file that contains serialised data 
            or where serialised data is to be placed.</param>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisation.CompletionEventHandler(System.Data.DataTable,System.String,System.String,Nequeo.Serialisation.EventType)">
            <summary>
            The general event completion handler.
            </summary>
            <param name="dataTable">The current datatable containing the data.</param>
            <param name="serialMethod">The current Serialisation process.</param>
            <param name="xmlFile">The file that contains serialised data 
            or where serialised data is to be placed.</param>
            <param name="eventType">The event type to create.</param>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisation.deserialiser_UnknownElement(System.Object,System.Xml.Serialization.XmlElementEventArgs)">
            <summary>
            This event is thrown if the element is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Element event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisation.deserialiser_UnknownAttribute(System.Object,System.Xml.Serialization.XmlAttributeEventArgs)">
            <summary>
            This event is thrown if the attribute is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Attribute event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisation.deserialiser_UnknownNode(System.Object,System.Xml.Serialization.XmlNodeEventArgs)">
            <summary>
            This event is thrown if the node is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Node event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisation.serialiser_UnknownElement(System.Object,System.Xml.Serialization.XmlElementEventArgs)">
            <summary>
            This event is thrown if the element is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Element event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisation.serialiser_UnknownAttribute(System.Object,System.Xml.Serialization.XmlAttributeEventArgs)">
            <summary>
            This event is thrown if the attribute is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Attribute event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.DataTableSerialisation.serialiser_UnknownNode(System.Object,System.Xml.Serialization.XmlNodeEventArgs)">
            <summary>
            This event is thrown if the node is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Node event argument.</param>
        </member>
        <member name="T:Nequeo.Serialisation.IDataTableSerialisation">
            <summary>
            Interface that Serialises or deserialises a datatable.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.IDataTableSerialisation.Deserialise(System.Byte[])">
            <summary>
            Deserialises data from the specified byte array.
            </summary>
            <param name="serialData">The serialised data to deserialise.</param>
            <returns>The deserialised datatable.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IDataTableSerialisation.Deserialise(System.String)">
            <summary>
            Deserialises data from the specified file.
            </summary>
            <param name="xmlFile">The full file and path of the file that contains
            the Serialised data.</param>
            <returns>The deserialised datatable.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IDataTableSerialisation.Serialise(System.Data.DataTable)">
            <summary>
            Serialises data to the specified byte array.
            </summary>
            <param name="dataTable">The datatable to serilaize.</param>
            <returns>True if the dataset was Serialised else false.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IDataTableSerialisation.Serialise(System.Data.DataTable,System.String)">
            <summary>
            Serialises data to the specified file.
            </summary>
            <param name="dataTable">The datatable to serilaize.</param>
            <param name="xmlFile">The full file and path where the Serialised data
            dhould be written to.</param>
            <returns>True if the datatable was Serialised else false.</returns>
        </member>
        <member name="T:Nequeo.Serialisation.SerialisationHandler">
            <summary>
            This delegate handles the transport of data from sender
            to receiver when data Serialisation process occurs.
            </summary>
            <param name="sender">The current object sending the message</param>
            <param name="e">The object containing the event information.</param>
        </member>
        <member name="T:Nequeo.Serialisation.SerialisationErrorHandler">
            <summary>
            This delegate handles the transport of data from sender
            to receiver when data Serialisation error occurs.
            </summary>
            <param name="sender">The current object sending the message</param>
            <param name="e">The object containing the event information.</param>
        </member>
        <member name="T:Nequeo.Serialisation.GeneralSerialisation">
            <summary>
            Class that serialises or deserialises a data objects.
            </summary>
        </member>
        <member name="F:Nequeo.Serialisation.GeneralSerialisation.Instance">
            <summary>
            Create a new static instance
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.#ctor">
            <summary>
            Constructor for the current class.
            </summary>
        </member>
        <member name="E:Nequeo.Serialisation.GeneralSerialisation.OnSerialisationError">
            <summary>
            This event occurs when an error occurs 
            attempting to Serialise a dataset.
            </summary>
        </member>
        <member name="E:Nequeo.Serialisation.GeneralSerialisation.OnSerialisationComplete">
            <summary>
            This event occurs when Serialisation of the dataset
            has completed through Serialisation.
            </summary>
        </member>
        <member name="E:Nequeo.Serialisation.GeneralSerialisation.OnDeserialisationComplete">
            <summary>
            This event occurs when deSerialisation of the dataset
            has completed through Serialisation.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.Deserialise(System.Type,System.String)">
            <summary>
            Deserialises data from the specified file.
            </summary>
            <param name="type">The type of object to deserialise.</param>
            <param name="xmlFile">The file containing serialised data.</param>
            <returns>The object containing the deserialised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.Deserialise(System.Type,System.Byte[])">
            <summary>
            Deserialises data from the specified byte array.
            </summary>
            <param name="type">The type of object to deserialise.</param>
            <param name="serialData">The byte array containing serialised data.</param>
            <returns>The object containing the deserialised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.DeserialiseSoap(System.Byte[])">
            <summary>
            Deserialises data from the specified byte array for a SOAP message.
            </summary>
            <param name="serialData">The byte array containing serialised data.</param>
            <returns>The object containing the deserialised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.DeserialiseDataContract(System.Type,System.Byte[])">
            <summary>
            Deserialises data from the specified byte array for an object with the [DataContract] attribute.
            </summary>
            <param name="type">The type of object to deserialise.</param>
            <param name="serialData">The byte array containing serialised data.</param>
            <returns>The object containing the deserialised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.Serialise(System.Object,System.Type,System.String)">
            <summary>
            Serialises data to the specified file.
            </summary>
            <param name="data">The object that is to be serialised.</param>
            <param name="type">The type of object to serialise.</param>
            <param name="xmlFile">The file to write serialised data to.</param>
            <returns>True if the object was serialised else false.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.Serialise(System.Object,System.Type)">
            <summary>
            Serialises data to the specified byte array.
            </summary>
            <param name="data">The object that is to be serialised.</param>
            <param name="type">The type of object to serialise.</param>
            <returns>The array of serialised bytes.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.SerialiseDataContract(System.Object,System.Type)">
            <summary>
            Serialises data to the specified byte array for an object with the [DataContract] attribute.
            </summary>
            <param name="data">The object that is to be serialised.</param>
            <param name="type">The type of object to serialise.</param>
            <returns>The array of serialised bytes.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.SerialiseSoap(System.Object)">
            <summary>
            Serialises data to the specified byte array for a SOAP message.
            </summary>
            <param name="data">The object that is to be serialised.</param>
            <returns>The array of serialised bytes.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.ExceptionHandler(System.Exception,System.String,System.String,System.String)">
            <summary>
            The general exception handler.
            </summary>
            <param name="e">The current eception object.</param>
            <param name="serialMethod">The current Serialisation process.</param>
            <param name="serialCustomError">The current custom exception.</param>
            <param name="xmlFile">The file that contains serialised data 
            or where serialised data is to be placed.</param>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.CompletionEventHandler(System.Object,System.String,System.String,Nequeo.Serialisation.EventType)">
            <summary>
            The general event completion handler.
            </summary>
            <param name="data">The current data containing the data.</param>
            <param name="serialMethod">The current Serialisation process.</param>
            <param name="xmlFile">The file that contains serialised data 
            or where serialised data is to be placed.</param>
            <param name="eventType">The event type to create.</param>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.deserialiser_UnknownElement(System.Object,System.Xml.Serialization.XmlElementEventArgs)">
            <summary>
            This event is thrown if the element is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Element event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.deserialiser_UnknownAttribute(System.Object,System.Xml.Serialization.XmlAttributeEventArgs)">
            <summary>
            This event is thrown if the attribute is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Attribute event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.deserialiser_UnknownNode(System.Object,System.Xml.Serialization.XmlNodeEventArgs)">
            <summary>
            This event is thrown if the node is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Node event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.serialiser_UnknownElement(System.Object,System.Xml.Serialization.XmlElementEventArgs)">
            <summary>
            This event is thrown if the element is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Element event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.serialiser_UnknownAttribute(System.Object,System.Xml.Serialization.XmlAttributeEventArgs)">
            <summary>
            This event is thrown if the attribute is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Attribute event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.GeneralSerialisation.serialiser_UnknownNode(System.Object,System.Xml.Serialization.XmlNodeEventArgs)">
            <summary>
            This event is thrown if the node is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Node event argument.</param>
        </member>
        <member name="T:Nequeo.Serialisation.IGeneralSerialisation">
            <summary>
            Interface that serialises or deserialises a data objects.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.IGeneralSerialisation.Deserialise(System.Type,System.String)">
            <summary>
            Deserialises data from the specified file.
            </summary>
            <param name="type">The type of object to deserialise.</param>
            <param name="xmlFile">The file containing serialised data.</param>
            <returns>The object containing the deserialised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IGeneralSerialisation.Deserialise(System.Type,System.Byte[])">
            <summary>
            Deserialises data from the specified byte array.
            </summary>
            <param name="type">The type of object to deserialise.</param>
            <param name="serialData">The byte array containing serialised data.</param>
            <returns>The object containing the deserialised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IGeneralSerialisation.DeserialiseSoap(System.Byte[])">
            <summary>
            Deserialises data from the specified byte array for a SOAP message.
            </summary>
            <param name="serialData">The byte array containing serialised data.</param>
            <returns>The object containing the deserialised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IGeneralSerialisation.DeserialiseDataContract(System.Type,System.Byte[])">
            <summary>
            Deserialises data from the specified byte array for an object with the [DataContract] attribute.
            </summary>
            <param name="type">The type of object to deserialise.</param>
            <param name="serialData">The byte array containing serialised data.</param>
            <returns>The object containing the deserialised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IGeneralSerialisation.Serialise(System.Object,System.Type,System.String)">
            <summary>
            Serialises data to the specified file.
            </summary>
            <param name="data">The object that is to be serialised.</param>
            <param name="type">The type of object to serialise.</param>
            <param name="xmlFile">The file to write serialised data to.</param>
            <returns>True if the object was serialised else false.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IGeneralSerialisation.Serialise(System.Object,System.Type)">
            <summary>
            Serialises data to the specified byte array.
            </summary>
            <param name="data">The object that is to be serialised.</param>
            <param name="type">The type of object to serialise.</param>
            <returns>The array of serialised bytes.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IGeneralSerialisation.SerialiseDataContract(System.Object,System.Type)">
            <summary>
            Serialises data to the specified byte array for an object with the [DataContract] attribute.
            </summary>
            <param name="data">The object that is to be serialised.</param>
            <param name="type">The type of object to serialise.</param>
            <returns>The array of serialised bytes.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IGeneralSerialisation.SerialiseSoap(System.Object)">
            <summary>
            Serialises data to the specified byte array for a SOAP message.
            </summary>
            <param name="data">The object that is to be serialised.</param>
            <returns>The array of serialised bytes.</returns>
        </member>
        <member name="T:Nequeo.Serialisation.EventType">
            <summary>
            The type of serialisation.
            </summary>
        </member>
        <member name="F:Nequeo.Serialisation.EventType.Deserialise">
            <summary>
            Deserialise the object.
            </summary>
        </member>
        <member name="F:Nequeo.Serialisation.EventType.Serialise">
            <summary>
            Serialise the object.
            </summary>
        </member>
        <member name="T:Nequeo.Serialisation.GenericSerialisationHandler">
            <summary>
            This delegate handles the transport of data from sender
            to receiver when data Serialisation process occurs.
            </summary>
            <param name="sender">The current object sending the message</param>
            <param name="e">The object containing the event information.</param>
        </member>
        <member name="T:Nequeo.Serialisation.GenericSerialisationErrorHandler">
            <summary>
            This delegate handles the transport of data from sender
            to receiver when data Serialisation error occurs.
            </summary>
            <param name="sender">The current object sending the message</param>
            <param name="e">The object containing the event information.</param>
        </member>
        <member name="T:Nequeo.Serialisation.GenericSerialisation`1">
            <summary>
            Class that serialises or deserialises a generic data object collection.
            </summary>
            <typeparam name="T">The type to examine.</typeparam>
        </member>
        <member name="F:Nequeo.Serialisation.GenericSerialisation`1.Instance">
            <summary>
            Create a new static instance
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.#ctor">
            <summary>
            Constructor for the current class.
            </summary>
        </member>
        <member name="E:Nequeo.Serialisation.GenericSerialisation`1.OnGenericSerialisationError">
            <summary>
            This event occurs when an error occurs 
            attempting to Serialise a dataset.
            </summary>
        </member>
        <member name="E:Nequeo.Serialisation.GenericSerialisation`1.OnGenericSerialisationComplete">
            <summary>
            This event occurs when Serialisation of the dataset
            has completed through Serialisation.
            </summary>
        </member>
        <member name="E:Nequeo.Serialisation.GenericSerialisation`1.OnGenericDeserialisationComplete">
            <summary>
            This event occurs when deSerialisation of the dataset
            has completed through Serialisation.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.Deserialise(System.Byte[])">
            <summary>
            Deserialise the current generic collection.
            </summary>
            <param name="serialData">The byte array of serilaised generic objects.</param>
            <returns>The deserilaised object collection.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.DeserialiseDataContract(System.Byte[])">
            <summary>
            Deserialise the current generic collection for an object with the [DataContract] attribute.
            </summary>
            <param name="serialData">The byte array of serilaised generic objects.</param>
            <returns>The deserilaised object collection.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.DeserialiseDataContract(System.Byte[],System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Deserialise the current generic collection for an object with the [DataContract] attribute.
            </summary>
            <param name="serialData">The byte array of serilaised generic objects.</param>
            <param name="knownTypes">The know types to deserialise.</param>
            <returns>The deserilaised object collection.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.Deserialise(System.String)">
            <summary>
            Deserialise the current generic collection.
            </summary>
            <param name="xmlFile">The xml file that contains the serialised data.</param>
            <returns>The deserilaised object collection.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.Serialise(`0)">
            <summary>
            Serialise the current generic collection.
            </summary>
            <param name="objectCollection">The generic collection to serialise.</param>
            <returns>The byte array with the generic collection of serliaised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.SerialiseDataContract(`0)">
            <summary>
            Serialise the current generic collection for an object with the [DataContract] attribute.
            </summary>
            <param name="objectCollection">The generic collection to serialise.</param>
            <returns>The byte array with the generic collection of serliaised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.Serialise(`0,System.String)">
            <summary>
            Serialise the current generic collection.
            </summary>
            <param name="objectCollection">The generic collection to serialise.</param>
            <param name="xmlFile">The xml file to write the serialised data to.</param>
            <returns>True if the collection was serialised else false.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.ExceptionHandler(System.Exception,System.String,System.String,System.String)">
            <summary>
            The general exception handler.
            </summary>
            <param name="e">The current eception object.</param>
            <param name="serialMethod">The current Serialisation process.</param>
            <param name="serialCustomError">The current custom exception.</param>
            <param name="xmlFile">The file that contains serialised data 
            or where serialised data is to be placed.</param>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.CompletionEventHandler(System.Object,System.String,System.String,Nequeo.Serialisation.EventType)">
            <summary>
            The general event completion handler.
            </summary>
            <param name="data">The current data containing the data.</param>
            <param name="serialMethod">The current Serialisation process.</param>
            <param name="xmlFile">The file that contains serialised data 
            or where serialised data is to be placed.</param>
            <param name="eventType">The event type to create.</param>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.deserialiser_UnknownElement(System.Object,System.Xml.Serialization.XmlElementEventArgs)">
            <summary>
            This event is thrown if the element is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Element event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.deserialiser_UnknownAttribute(System.Object,System.Xml.Serialization.XmlAttributeEventArgs)">
            <summary>
            This event is thrown if the attribute is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Attribute event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.deserialiser_UnknownNode(System.Object,System.Xml.Serialization.XmlNodeEventArgs)">
            <summary>
            This event is thrown if the node is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Node event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.serialiser_UnknownElement(System.Object,System.Xml.Serialization.XmlElementEventArgs)">
            <summary>
            This event is thrown if the element is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Element event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.serialiser_UnknownAttribute(System.Object,System.Xml.Serialization.XmlAttributeEventArgs)">
            <summary>
            This event is thrown if the attribute is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Attribute event argument.</param>
        </member>
        <member name="M:Nequeo.Serialisation.GenericSerialisation`1.serialiser_UnknownNode(System.Object,System.Xml.Serialization.XmlNodeEventArgs)">
            <summary>
            This event is thrown if the node is not known.
            </summary>
            <param name="sender">The current object sender.</param>
            <param name="e">Node event argument.</param>
        </member>
        <member name="T:Nequeo.Serialisation.IGenericSerialisation`1">
            <summary>
            Interface that serialises or deserialises a generic data object collection.
            </summary>
            <typeparam name="T">The type to examine.</typeparam>
        </member>
        <member name="M:Nequeo.Serialisation.IGenericSerialisation`1.Deserialise(System.Byte[])">
            <summary>
            Deserialise the current generic collection.
            </summary>
            <param name="serialData">The byte array of serilaised generic objects.</param>
            <returns>The deserilaised object collection.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IGenericSerialisation`1.DeserialiseDataContract(System.Byte[])">
            <summary>
            Deserialise the current generic collection for an object with the [DataContract] attribute.
            </summary>
            <param name="serialData">The byte array of serilaised generic objects.</param>
            <returns>The deserilaised object collection.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IGenericSerialisation`1.DeserialiseDataContract(System.Byte[],System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Deserialise the current generic collection for an object with the [DataContract] attribute.
            </summary>
            <param name="serialData">The byte array of serilaised generic objects.</param>
            <param name="knownTypes">The know types to deserialise.</param>
            <returns>The deserilaised object collection.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IGenericSerialisation`1.Deserialise(System.String)">
            <summary>
            Deserialise the current generic collection.
            </summary>
            <param name="xmlFile">The xml file that contains the serialised data.</param>
            <returns>The deserilaised object collection.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IGenericSerialisation`1.Serialise(`0)">
            <summary>
            Serialise the current generic collection.
            </summary>
            <param name="objectCollection">The generic collection to serialise.</param>
            <returns>The byte array with the generic collection of serliaised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IGenericSerialisation`1.SerialiseDataContract(`0)">
            <summary>
            Serialise the current generic collection for an object with the [DataContract] attribute.
            </summary>
            <param name="objectCollection">The generic collection to serialise.</param>
            <returns>The byte array with the generic collection of serliaised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.IGenericSerialisation`1.Serialise(`0,System.String)">
            <summary>
            Serialise the current generic collection.
            </summary>
            <param name="objectCollection">The generic collection to serialise.</param>
            <param name="xmlFile">The xml file to write the serialised data to.</param>
            <returns>True if the collection was serialised else false.</returns>
        </member>
        <member name="T:Nequeo.Serialisation.JavaObjectNotation">
            <summary>
            JavaScript Object Notation Serialisation.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonDataContractSerializer``1(``0)">
            <summary>
            Gets the JSON serialized string for an object with the [DataContract] attribute.
            </summary>
            <typeparam name="T">The type of the resulting object.</typeparam>
            <param name="data">The data object the serilaise.</param>
            <returns>The string of serialised data.</returns>
            <remarks>Encoding type is UTF8</remarks>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonDataContractDeserializer``1(System.String)">
            <summary>
            Converts the specified JSON string to an object of type T for an object with the [DataContract] attribute.
            </summary>
            <typeparam name="T">The type of the resulting object.</typeparam>
            <param name="serialisedJSon">The JSON string to be deserialized.</param>
            <returns>The deserialized object.</returns>
            <remarks>Encoding type is UTF8</remarks>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonCustomSerializer(System.Object)">
            <summary>
            Serialises the object to a JSON format.
            </summary>
            <param name="data">The data to serialise.</param>
            <returns>The serialised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonCustomDeserializer``1(System.String)">
            <summary>
            Deserialises the object from a JSON format.
            </summary>
            <typeparam name="T">The type to deserialise the data to.</typeparam>
            <param name="serialisedJSon">The JSON string to be deserialized.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonTwoDimensionDataFormatter(System.Array,System.String)">
            <summary>
            Formats the two dimensional array of data into the JSON equivalent.
            </summary>
            <param name="array">The array containg the data.</param>
            <param name="prefixName">The prefix name for the JSON format.</param>
            <returns>The JSON serilaised formatted data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonTwoDimensionDataFormatter(System.Array,System.String,System.Int32,System.Int32)">
            <summary>
            Formats the two dimensional array of data into the JSON equivalent.
            </summary>
            <param name="array">The array containg the data.</param>
            <param name="prefixName">The prefix name for the JSON format.</param>
            <param name="iTotal">The number of i elements to return from the array.</param>
            <param name="jTotal">The number of j elements to return from the array.</param>
            <returns>The JSON serilaised formatted data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonOneDimensionDataFormatter(System.Array,System.String)">
            <summary>
            Formats the one dimensional array of data into the JSON equivalent.
            </summary>
            <param name="array">The array containg the data.</param>
            <param name="prefixName">The prefix name for the JSON format.</param>
            <returns>The JSON serilaised formatted data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonOneDimensionDataFormatter(System.Array,System.String,System.Int32)">
            <summary>
            Formats the one dimensional array of data into the JSON equivalent.
            </summary>
            <param name="array">The array containg the data.</param>
            <param name="prefixName">The prefix name for the JSON format.</param>
            <param name="iTotal">The number of i elements to return from the array.</param>
            <returns>The JSON serilaised formatted data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JavaScriptSerializer(System.Object)">
            <summary>
            Gets the JSON serialized string.
            </summary>
            <param name="data">The data object the serilaise.</param>
            <returns>The string of serialised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JavaScriptSerializer(System.Object,System.Text.StringBuilder)">
            <summary>
            Gets the JSON serialized string.
            </summary>
            <param name="data">The data object the serilaise.</param>
            <param name="builder">The System.Text.StringBuilder object that is used to write the JSON string.</param>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JavaScriptDeserializer``1(System.String)">
            <summary>
            Converts the specified JSON string to an object of type T.
            </summary>
            <typeparam name="T">The type of the resulting object.</typeparam>
            <param name="serialisedJSon">The JSON string to be deserialized.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JavaScriptDeserializer(System.String)">
            <summary>
            Converts the specified JSON string to an object.
            </summary>
            <param name="serialisedJSon">The JSON string to be deserialized.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.Serializer(System.Object)">
            <summary>
            Gets the JSON serialized string.
            </summary>
            <param name="data">The data object the serilaise.</param>
            <returns>The string of serialised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.Deserializer``1(System.String)">
            <summary>
            Converts the specified JSON string to an object of type T.
            </summary>
            <typeparam name="T">The type of the resulting object.</typeparam>
            <param name="serialisedJSon">The JSON string to be deserialized.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.Deserializer(System.String)">
            <summary>
            Converts the specified JSON string to an object.
            </summary>
            <param name="serialisedJSon">The JSON string to be deserialized.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.AppendData(System.Object,System.Type)">
            <summary>
            Append the type data to the JSON object.
            </summary>
            <param name="value">The property value.</param>
            <param name="propertyType">The property type.</param>
            <returns>The equivalent value.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.CreateMemberType(System.String,System.Reflection.PropertyInfo[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates a new object instance or new array instance.
            </summary>
            <param name="member">The current member name.</param>
            <param name="properties">The properites collection in the object.</param>
            <param name="arrayLength1">The length of the first dimension.</param>
            <param name="arrayLength2">The length of the second dimension. If zero then only one dimension is created else two dimensions are created.</param>
            <param name="createSingleType">Should a single type be created.</param>
            <returns>The new object instance.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonDataFormatterEx(System.Array,System.String,System.Text.StringBuilder)">
            <summary>
            Formats the one dimensional array of data into the JSON equivalent.
            </summary>
            <param name="array">The array containg the data.</param>
            <param name="memberName">The member name for the JSON format.</param>
            <param name="builder">The string builder used to construct the JSON.</param>
            <returns>The JSON serilaised formatted data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonCustomSerializerEx(System.Object,System.Text.StringBuilder)">
            <summary>
            Serialises the object to a JSON format.
            </summary>
            <param name="data">The data to serialise.</param>
            <param name="builder">The string builder used to construct the JSON.</param>
            <remarks>This method only serialises members that have 'XmlElementAttribute' or 'XmlArrayAttribute'
            attributes any 'XmlArrayAttribute' attribute must be a two dimensional string array. Use
            the 'JavaScriptSerializer' methods for all other serialisation.</remarks>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonCustomDeserializerAssignEx(System.String,System.Object,System.Reflection.PropertyInfo[],System.Object,System.Boolean)">
            <summary>
            Assign the property in the data object.
            </summary>
            <param name="member">The current member name.</param>
            <param name="data">The data to assign to the data object.</param>
            <param name="properties">The collection of properties for the data object.</param>
            <param name="dataObject">The data object to assign the data to.</param>
            <param name="IsPrimitiveType">Is the type primitive or an object type.</param>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.AssignDataType(System.Object,System.Type)">
            <summary>
            Assign the newly formatted data type.
            </summary>
            <param name="value">The value of the primitive type.</param>
            <param name="type">The current primitive type.</param>
            <returns>The newly formatted value.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonCustomDeserializerEx(System.String,System.String,System.Reflection.PropertyInfo[],System.Object)">
            <summary>
            Deserialises the object from a JSON format.
            </summary>
            <param name="member">The current member name.</param>
            <param name="data">The data to examine.</param>
            <param name="properties">The properties for the data object.</param>
            <param name="dataObject">The current data object to assign data to.</param>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonCustomDeserializerExPrimitive(System.String,System.String,System.Reflection.PropertyInfo[],System.Object)">
            <summary>
            Deserialises the object from a JSON format.
            </summary>
            <param name="member">The current member name.</param>
            <param name="data">The data to examine.</param>
            <param name="properties">The properties for the data object.</param>
            <param name="dataObject">The current data object to assign data to.</param>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonCustomDeserializerExArrayArray(System.String,System.String,System.Reflection.PropertyInfo[],System.Object)">
            <summary>
            Deserialises the object from a JSON format.
            </summary>
            <param name="member">The current member name.</param>
            <param name="data">The data to examine.</param>
            <param name="properties">The properties for the data object.</param>
            <param name="dataObject">The current data object to assign data to.</param>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonCustomDeserializerExArrayClass(System.String,System.String,System.Reflection.PropertyInfo[],System.Object)">
            <summary>
            Deserialises the object from a JSON format.
            </summary>
            <param name="member">The current member name.</param>
            <param name="data">The data to examine.</param>
            <param name="properties">The properties for the data object.</param>
            <param name="dataObject">The current data object to assign data to.</param>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonCustomDeserializerExClass(System.String,System.String,System.Reflection.PropertyInfo[],System.Object)">
            <summary>
            Deserialises the object from a JSON format.
            </summary>
            <param name="member">The current member name.</param>
            <param name="data">The data to examine.</param>
            <param name="properties">The properties for the data object.</param>
            <param name="dataObject">The current data object to assign data to.</param>
        </member>
        <member name="M:Nequeo.Serialisation.JavaObjectNotation.JSonCustomDeserializerExArray(System.String,System.String,System.Reflection.PropertyInfo[],System.Object)">
            <summary>
            Deserialises the object from a JSON format.
            </summary>
            <param name="member">The current member name.</param>
            <param name="data">The data to examine.</param>
            <param name="properties">The properties for the data object.</param>
            <param name="dataObject">The current data object to assign data to.</param>
        </member>
        <member name="T:Nequeo.Serialisation.NameValue">
            <summary>
            Name value collection serialisation.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.NameValue.Deserializer``1(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Deserializer the name value collection.
            </summary>
            <typeparam name="T">The type to create.</typeparam>
            <param name="collection">The collection of name values.</param>
            <returns>The type containing the data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.NameValue.Serializer``1(``0)">
            <summary>
            Serializer the name value collection.
            </summary>
            <typeparam name="T">The type to create.</typeparam>
            <param name="data">The type to serialise.</param>
            <returns>The name value collection.</returns>
        </member>
        <member name="T:Nequeo.Serialisation.XmlCustomSerialiser">
            <summary>
            Custom Xml serialiser. Provides custom formatting for XML 
            serialization and deserialization through the IXmlSerializable interface.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.XmlCustomSerialiser.#ctor">
            <summary>
            Custom Xml serialiser. Provides custom formatting for XML 
            serialization and deserialization through the IXmlSerializable interface.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.XmlCustomSerialiser.GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable
            interface, you should return null (Nothing in Visual Basic) from this method,
            and instead, if specifying a custom schema is required, apply the System.Xml.Serialization.XmlSchemaProviderAttribute
            to the class.
            </summary>
            <returns>Null; not implemented.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.XmlCustomSerialiser.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The System.Xml.XmlReader stream from which the object is deserialized.</param>
        </member>
        <member name="M:Nequeo.Serialisation.XmlCustomSerialiser.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The System.Xml.XmlWriter stream to which the object is serialized.</param>
        </member>
        <member name="T:Nequeo.Serialisation.Data.Json">
            <summary>
            Java object notation data helper
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.Data.Json.GetJavaObjectNotationValue(System.Type,System.Object)">
            <summary>
            Gets the JSON data type for the value and type.
            </summary>
            <param name="systemType">The property type.</param>
            <param name="value">The value of the type.</param>
            <returns>The JSON text value.</returns>
        </member>
        <member name="T:Nequeo.Serialisation.Extension.DataTableExtensions">
            <summary>
            Class that extends the System.Data.DataTable type.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.Extension.DataTableExtensions.Serialise(System.Data.DataTable)">
            <summary>
            Serialise the current data table
            </summary>
            <param name="source">The current data table source.</param>
            <returns>The byte array of serialised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.Extension.DataTableExtensions.Deserialise(System.Data.DataTable,System.Byte[])">
            <summary>
            Deserialise the current data table
            </summary>
            <param name="source">The current data table source.</param>
            <param name="serialisedData">The serialised data.</param>
            <returns>The deserialised data table.</returns>
        </member>
        <member name="T:Nequeo.Serialisation.Extension.SerializationExtensions">
            <summary>
            Class that extends the serialization functionallity.
            </summary>
        </member>
        <member name="M:Nequeo.Serialisation.Extension.SerializationExtensions.SerialiseXml``1(``0)">
            <summary>
            Serialise the current object type.
            </summary>
            <typeparam name="T">The type to examine.</typeparam>
            <param name="source">The current source object type.</param>
            <returns>The byte array of serialised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.Extension.SerializationExtensions.SerialiseJson``1(``0)">
            <summary>
            Serialise the current object type.
            </summary>
            <typeparam name="T">The type to examine.</typeparam>
            <param name="source">The current source object type.</param>
            <returns>The string of serialised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.Extension.SerializationExtensions.DeserialiseXml``1(System.Byte[])">
            <summary>
            Deserialise the current object type.
            </summary>
            <typeparam name="T">The type to examine.</typeparam>
            <param name="source">The current source object type.</param>
            <returns>The deserialised obejct type.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.Extension.SerializationExtensions.DeserialiseXml``1(System.String)">
            <summary>
            Deserialise the current object type.
            </summary>
            <typeparam name="T">The type to examine.</typeparam>
            <param name="source">The current source object type.</param>
            <returns>The deserialised obejct type.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.Extension.SerializationExtensions.DeserialiseJson``1(System.Byte[])">
            <summary>
            Deserialise the current object type.
            </summary>
            <typeparam name="T">The type to examine.</typeparam>
            <param name="source">The current source object type.</param>
            <returns>The deserialised obejct type.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.Extension.SerializationExtensions.DeserialiseJson``1(System.String)">
            <summary>
            Deserialise the current object type.
            </summary>
            <typeparam name="T">The type to examine.</typeparam>
            <param name="source">The current source object type.</param>
            <returns>The deserialised obejct type.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.Extension.SerializationExtensions.SerialiseDataEntity``1(``0)">
            <summary>
            Serialise the current object type.
            </summary>
            <typeparam name="T">The type to examine.</typeparam>
            <param name="source">The current source object type.</param>
            <returns>The byte array of serialised data.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.Extension.SerializationExtensions.DeserialiseDataEntity``1(System.Byte[])">
            <summary>
            Deserialise the current object type.
            </summary>
            <typeparam name="T">The type to examine.</typeparam>
            <param name="source">The current source object type.</param>
            <returns>The deserialised obejct type.</returns>
        </member>
        <member name="M:Nequeo.Serialisation.Extension.SerializationExtensions.DeserialiseDataEntity``1(System.String)">
            <summary>
            Deserialise the current object type.
            </summary>
            <typeparam name="T">The type to examine.</typeparam>
            <param name="source">The current source object type.</param>
            <returns>The deserialised obejct type.</returns>
        </member>
    </members>
</doc>
